# If .trivyignore is changed, add (new) CVE suppression changes to InfluxDB

name: Check for CVE suppression changes

on:
  workflow_call:

jobs:
  check-for-cve-suppressions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Checkout JS Tools
        uses: actions/checkout@v4
        with:
          repository: felleslosninger/eid-github-workflows
          path: tools
      - name: Install InfluxDB Client
        run: |
          npm install @influxdata/influxdb-client
      - name: Check for CVE suppression changes in trivyignore
        id: new-cve-suppressions
        if: ${{ hashFiles('./.trivyignore') != '' }}
        run: |
          git diff --unified=0 ${{ env.COMMIT_HASH_BEFORE }}..${{ env.COMMIT_HASH_AFTER }} -- .trivyignore | grep -E -i '^([+]|[-])(CVE).*' | cut -d' ' -f 1 >> trivy-git-diff.txt
          if [ -f "trivy-git-diff.txt" ] && [ -s "trivy-git-diff.txt" ]; then
            suppressions_with_delimiter=""
            while read -r suppression
            do
              if [[ -z $suppressions_with_delimiter ]]; then
                suppressions_with_delimiter="$suppression"
              else
                suppressions_with_delimiter="$suppressions_with_delimiter,$suppression"
              fi
            done < "trivy-git-diff.txt"
            echo "suppressions=$suppressions_with_delimiter" >> "$GITHUB_OUTPUT"
          fi
        env:
          COMMIT_HASH_BEFORE: ${{ github.event.before }}
          COMMIT_HASH_AFTER: ${{ github.event.after }}
      - name: Write CVE suppressions to InfluxDB
        id: write-supressions-to-influxdb
        uses: actions/github-script@v6
        env:
          INFLUXDB_TOKEN: ${{ secrets.INFLUXDB_TOKEN_CVE }}
          INFLUXDB_URL: "https://westeurope-1.azure.cloud2.influxdata.com"
          SUPPRESSIONS: ${{ steps.new-cve-suppressions.outputs.suppressions }}
          BUCKET: "cve"
        with:
          script: |
            const Utils = require('./tools/.github/js/utils.js');
            const { InfluxDB, Point } = require("@influxdata/influxdb-client");

            const {
              INFLUXDB_TOKEN,
              INFLUXDB_URL,
              ORGANIZATION,
              BUCKET,
            } = process.env;

            const client = new InfluxDB({
              url: INFLUXDB_URL,
              token: INFLUXDB_TOKEN,
            }).getWriteApi(ORGANIZATION, BUCKET, "ns");

            const suppressions = [...Utils.toArrayFromString('${{ env.SUPPRESSIONS }}', ',')];
            console.log("Suppressions", suppressions);

            for (let index = 0; index < suppressions.length; index++) {
              const suppression = `${suppressions[index]}`;
              const suppressionWithoutPrefix = suppression.substring(1);
              const event_type = Utils.getSuppressedOrUnSuppressedEventType(suppression);
              const point = new Point("cve")
                .tag("repository", "${{ github.repository }}")
                .tag("application", "${{ github.event.repository.name }}")
                .stringField("commit_hash", "${{ github.event.head_commit.id }}")
                .stringField("cve", `${suppressionWithoutPrefix}`)
                .stringField("event", `${event_type}`);

              console.log(`Data: ${JSON.stringify(point)}`);
              client.writePoint(point);
            }
