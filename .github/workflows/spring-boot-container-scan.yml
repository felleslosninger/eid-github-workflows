name: Container scan

on:
  workflow_call:
    inputs:
      image-name:
        description: Name of Docker image
        required: true
        type: string
      registry-url:
        description: Image/Container Registery URL
        default: 'my-local-registery'
        required: false
        type: string
      java-version:
        description: Main version of java
        default: '11'
        required: false
        type: string
      container-scan-offline-mode:
        description: Container-scan is default download updated CVE definitions via Trivy, enable offline on download problems
        default: false
        type: boolean
    secrets:
      eid-build-token:
        description: Token from eid-build
        required: true
      maven-user:
        description: Maven user
        required: true
      maven-password:
        description: Maven password
        required: true


jobs:
  build-and-scan-image:
      runs-on: ubuntu-latest
      env:
        IMAGE-NAME:  ${{ inputs.image-name }}
        DOCKLE_HOST: "unix:///var/run/docker.sock"
        #TRIVY_TIMEOUT: "15m"
        TRIVY_OFFLINE_SCAN: ${{ inputs.container-scan-offline-mode }}
      steps:
        - name: Set imagetag as env variable
          run: echo "IMAGETAG=$(date +'%Y-%m-%d-%H%M')-${GITHUB_SHA::8}" >> "$GITHUB_ENV"
        - uses: actions/checkout@v3
        - name: Set up JDK ${{ inputs.java-version }}
          uses: actions/setup-java@v3
          with:
            distribution: 'liberica'
            java-version: ${{ inputs.java-version }}
        - name: Cache Maven packages
          uses: actions/cache@v3.2.4
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2
        - uses: s4u/maven-settings-action@v2.8.0
          with:
            servers: |
              [{
                  "id": "github-oidc-sdk",
                  "username": "${{ secrets.maven-user }}",
                  "password": "${{ secrets.maven-password }}"
              },
              {
                "id": "github",
                "username": "${{ secrets.maven-user }}",
                "password": "${{ secrets.maven-password }}"
              }]
        - name: Build image with Maven/Spring Boot (skipTests)
          run: mvn -DskipTests -B spring-boot:build-image --file pom.xml -Dspring-boot.build-image.imageName=${{ inputs.registry-url }}/${{env.IMAGE-NAME}}:"$IMAGETAG" -Dspring-boot.build-image.builder=paketobuildpacks/builder:tiny
        - name: Create SBOM artifact-name
          id: sbom-name
          run: |
            SBOM_NAME=$(echo ${{env.IMAGE-NAME}} | tr '/' '-')
            echo "SBOM_ARTIFACT_ID=$SBOM_NAME" >> "$GITHUB_OUTPUT"
        - uses: anchore/sbom-action@v0
          with:
            image: ${{ inputs.registry-url }}/${{env.IMAGE-NAME}}:${{env.IMAGETAG}}
            artifact-name: sbom-${{steps.sbom-name.outputs.SBOM_ARTIFACT_ID}}-${{env.IMAGETAG}}.spdx
        - name: Run Trivy vulnerability scanner
          uses: aquasecurity/trivy-action@e5f43133f6e8736992c9f3c1b3296e24b37e17f2 # pin@v0.10.0
          with:
            image-ref: ${{ inputs.registry-url }}/${{env.IMAGE-NAME}}:${{env.IMAGETAG}}
            exit-code: '1'
            severity: 'CRITICAL,HIGH'
