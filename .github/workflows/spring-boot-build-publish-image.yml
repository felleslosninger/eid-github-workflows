name: Build/publish Docker image

on:
  workflow_call:
    inputs:
      image-name:
        description: Name of Docker image
        required: false
        type: string
      image-pack:
        description: Docker image pack of builder-jammy-tiny, builder-jammy-base or builder-jammy-full
        default: builder-jammy-tiny
        required: false
        type: string
      java-version:
        description: Main version of java
        default: '11'
        required: false
        type: string
      allure-enabled:
        description: Allure reports is default enabled
        default: false
        required: false
        type: boolean
      container-scan-offline-mode:
        description: Container-scan is default download updated CVE definitions via Trivy, enable offline on download problems
        default: false
        type: boolean
      slack-channel-id:
        description: Team channel id
        default: ''
        required: false
        type: string
    secrets:
      eid-build-token:
        description: Token from eid-build
        required: false
      maven-user:
        description: Maven user
        required: true
      maven-password:
        description: Maven password
        required: true
      registry-url:
        description: Image/Container Registery URL
        required: true
      registry-username:
        description: Image/Container Registery username
        required: true
      registry-password:
        description: Image/Container Registery password
        required: true
      allure-user:
        description: Allure user for reporting results of unit tests
        required: false
      allure-password:
        description: Allure password for reporting results of unit tests
        required: false
    outputs:
      image-version:
        description: "Docker image version"
        value: ${{ jobs.build-publish-image.outputs.imagetag }}
      image-digest:
        description: "Docker image SHA256 digest"
        value: ${{ jobs.build-publish-image.outputs.imagedigest }}
jobs:
  build-publish-image:
      runs-on: ubuntu-latest
      env:
        REPOSITORY-NAME: ${{ github.event.repository.name }}
        DOCKLE_HOST: "unix:///var/run/docker.sock"
        #TRIVY_TIMEOUT: "15m"
        TRIVY_OFFLINE_SCAN: ${{ inputs.container-scan-offline-mode }}
      outputs:
        imagetag: ${{ steps.output-image-tag.outputs.imagetag }}
        imagedigest: ${{ steps.output-image-digest.outputs.imagedigest }}
      steps:
        - name: Set imagetag as env variable
          run: echo "IMAGETAG=$(date +'%Y-%m-%d-%H%M')-${GITHUB_SHA::8}" >> "$GITHUB_ENV"
        - name: Set IMAGE-NAME env variable
          run: |
             echo "IMAGE-NAME=${{ secrets.registry-url }}/${{ inputs.image-name || env.REPOSITORY-NAME }}" >> "$GITHUB_ENV"
        - uses: actions/checkout@v4
        - name: yaml-lint
          uses: ibiqlik/action-yamllint@v3
          with:
            file_or_dir: src/main/resources/application*.y*ml
            config_data: |
              extends: default
              rules:
                empty-lines: disable
                line-length:
                  max: 150
                  level: warning
        - name: Set up JDK ${{ inputs.java-version }}
          uses: actions/setup-java@v3
          with:
            distribution: 'liberica'
            java-version: ${{ inputs.java-version }}
        - name: Cache Maven packages
          uses: actions/cache@v3.3.1
          with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2
        - uses: s4u/maven-settings-action@v2.8.0
          with:
            servers: |
              [{
                  "id": "github-oidc-sdk",
                  "username": "${{ secrets.maven-user }}",
                  "password": "${{ secrets.maven-password }}"
              },
              {
                "id": "github",
                "username": "${{ secrets.maven-user }}",
                "password": "${{ secrets.maven-password }}"
              }]
        - name: Maven update version used in application.yaml
          run: mvn versions:set -B -DnewVersion="$IMAGETAG"
        - name: Build image with Maven/Spring Boot
          run: mvn -B spring-boot:build-image --file pom.xml -Dspring-boot.build-image.imageName=${{env.IMAGE-NAME}}:${{env.IMAGETAG}} -Dspring-boot.build-image.builder=paketobuildpacks/${{ inputs.image-pack }} -Dspring-boot.build-image.createdDate=now
        - name: Run Trivy vulnerability scanner
          uses: aquasecurity/trivy-action@2b6a709cf9c4025c5438138008beaddbb02086f0 # pin@v0.14.0
          with:
            image-ref: ${{env.IMAGE-NAME}}:${{env.IMAGETAG}}
            exit-code: '1'
            severity: 'CRITICAL,HIGH'
        - name: Create SBOM artifact-name
          id: sbom-name
          run: |
            SBOM_NAME=$(echo ${{env.IMAGE-NAME}} | tr '/' '-')
            echo "SBOM_ARTIFACT_ID=$SBOM_NAME" >> "$GITHUB_OUTPUT"
        - uses: anchore/sbom-action@v0
          with:
            image: ${{env.IMAGE-NAME}}:${{env.IMAGETAG}}
            artifact-name: sbom-${{steps.sbom-name.outputs.SBOM_ARTIFACT_ID}}-${{env.IMAGETAG}}.spdx
        - name: 'Login Azure docker container registery'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.registry-url }}
            username: ${{ secrets.registry-username }}
            password: ${{ secrets.registry-password }}
        - name: 'Push image'
          run:
            docker push ${{env.IMAGE-NAME}}:${{env.IMAGETAG}}
        - run:
            echo "IMAGE_DIGEST=$(docker inspect --format='{{.RepoDigests}}' ${{env.IMAGE-NAME}}:${{env.IMAGETAG}}|cut -d '@' -f 2|cut -d ']' -f 1)" >> "$GITHUB_ENV"
        - id: output-image-tag
          run: echo "imagetag=${{env.IMAGETAG}}" >> "$GITHUB_OUTPUT"
        - id: output-image-digest
          run: echo "imagedigest=${{env.IMAGE_DIGEST}}" >> "$GITHUB_OUTPUT"
  notify-on-errors:
    needs: [ build-publish-image ]
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    uses: ./.github/workflows/send-notification-on-workflow-errors.yml
    with:
      slack-channel-id: ${{ inputs.slack-channel-id }}
    secrets: inherit