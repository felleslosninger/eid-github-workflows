name: New image version in Kubernetes config

on:
  workflow_call:
    inputs:
      application-name:
        description: Name of application
        required: false
        type: string
      image-name:
        description: Name of Docker image
        required: false
        type: string
      image-version:
        description: Docker image version
        required: true
        type: string
      image-digest:
        description: Docker image digest (SHA256)
        required: true
        type: string
      kubernetes-repo:
        description: Repository for kubernetes manifests (idporten-cd | minid-cd)
        default: 'idporten-cd'
        required: false
        type: string
      kubernetes-repo-event:
        description: Name of event to trigger in kubernetes repository
        default: 'update-version'
        required: false
        type: string
      kustomize-overlay:
        description: Kustomize overlay to use for image update
        default: 'latest'
        required: false
        type: string
    secrets:
      eid-build-token:
        description: Token from eid-build
        required: true
      registry-url:
        description: Image/Container Registery URL
        required: true
jobs:
  update-version:
    runs-on: ubuntu-latest
    env:
      REPOSITORY-NAME: ${{ github.event.repository.name }}
    steps:
      - name: Log input parameters
        run: echo ${{inputs.image-version}} - ${{inputs.image-digest}} - ${{env.IMAGE-NAME}}
      - name: Set image and application name
        run: |
             echo "IMAGE-NAME=${{ inputs.image-name || env.REPOSITORY-NAME }}" >> "$GITHUB_ENV"
             echo "APPLICATION-NAME=${{ inputs.application-name || env.REPOSITORY-NAME  }}" >> "$GITHUB_ENV"
      - uses: actions-ecosystem/action-regex-match@v2
        id: regex-find-jira-id
        with:
          text: ${{ github.event.head_commit.message }}
          regex: '^([a-zA-Z]{2,6}-[\d]+)(.+)'
      - id: output-jira-id
        if: ${{ steps.regex-find-jira-id.outputs.match != '' }}
        run: echo "JIRA_ID=${{ steps.regex-find-jira-id.outputs.group1 }}" >> "$GITHUB_ENV"
      - uses: octokit/request-action@v2.x
        id: get_labels
        with:
          route: GET /repos/${{ github.repository }}/commits/${{ github.sha }}/pulls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
            echo "PR_LABELS=${{ join(fromJSON(steps.get_labels.outputs.data)[0].labels.*.name) }}" >> "$GITHUB_ENV"
            echo "PR_NUMBER=${{ fromJson(steps.get_labels.outputs.data)[0].number }}" >> "$GITHUB_ENV"
      - id: check_dependabot
        run: echo "DEPENDABOT=${{ contains(env.PR_LABELS, 'dependabot') }}" >> "$GITHUB_ENV"
      - id: output-dependabot
        if: ${{ steps.regex-find-jira-id.outputs.match == '' && steps.check_dependabot.outputs.result == 'true'}}
        run: echo "JIRA_ID=Dependabot" >> "$GITHUB_ENV"
      - name: 'update Kubernetes for new version of image ${{env.IMAGE-NAME}} (Dependabot)'
        if: ${{ env.DEPENDABOT }}
        uses: peter-evans/repository-dispatch@26b39ed245ab8f31526069329e112ab2fb224588 # pin@v2
        with:
          token: ${{ secrets.eid-build-token }}
          event-type: ${{ inputs.kubernetes-repo-event }}
          repository: 'felleslosninger/${{ inputs.kubernetes-repo }}'
          client-payload: '{"image-name": "${{env.IMAGE-NAME}}", "image": "${{env.IMAGE-NAME}}:${{env.IMAGETAG}}@${{env.IMAGE_DIGEST}}","version":"${{env.IMAGETAG}}","application-name":"${{env.APPLICATION-NAME}}","jira-id":"${{env.JIRA_ID}}","actor":"${{github.event.pusher.name }}",  "pr-number":"${{ env.PR_NUMBER }}", "pr-labels":"${{ env.PR_LABELS }}", "sha":"${{ github.sha }}" }'
      - name: 'update Kubernetes for new version of image ${{env.IMAGE-NAME}}'
        if: ${{ env.DEPENDABOT == 'false' }}
        uses: peter-evans/repository-dispatch@26b39ed245ab8f31526069329e112ab2fb224588 # pin@v2
        with:
          token: ${{ secrets.eid-build-token }}
          event-type: ${{ inputs.kubernetes-repo-event }}
          repository: 'felleslosninger/${{ inputs.kubernetes-repo }}'
          client-payload: '{"image-name": "${{env.IMAGE-NAME}}", "image": "${{env.IMAGE-NAME}}:${{env.IMAGETAG}}@${{env.IMAGE_DIGEST}}","version":"${{env.IMAGETAG}}","application-name":"${{env.APPLICATION-NAME}}","jira-id":"${{env.JIRA_ID}}","author":"${{ toJSON(github.event.head_commit.author) }}", "pr-number":"${{ env.PR_NUMBER }}", "pr-labels":"${{ env.PR_LABELS }}", "sha":"${{ github.sha }}" }'
