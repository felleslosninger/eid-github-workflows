name: Maven build java

on:
  workflow_call:
    inputs:
      java-version:
        description: Main version of java
        default: '11'
        required: false
        type: string
      sbom-path:
        description: Target directory for SBOM generation
        default: ./target/
        required: false
        type: string
      allure-enabled:
        description: Allure reports is default disabled
        default: false
        required: false
        type: boolean
    secrets:
      eid-build-token:
        description: Token from eid-build
        required: false
      maven-user:
        description: Maven user
        required: true
      maven-password:
        description: Maven password
        required: true
      allure-user:
        description: Allure user for reporting results of unit tests
        required: false
      allure-password:
        description: Allure password for reporting results of unit tests
        required: false
jobs:
  verify-pull-request-title:
    if: ${{ github.event_name == 'pull_request'}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const REGEX = new RegExp("^[^â€¦]+$");  // Title must match this regex
            const MIN_LENGTH = 10;                 // Min length of the title
            const MAX_LENGTH = 100;                // Max length of the title (-1 is no max)
            const ALLOWED_PREFIXES = ['Bump,ID-,MIN-,PBLEID-,MP-,KRR-,PF-,AOS-,SP-'];          // Title must start with one of these prefixes
            const PREFIX_CASE_SENSITIVE = false;  // Whether the prefix is case sensitive

            const validateTitlePrefix = (title, prefix) =>
              PREFIX_CASE_SENSITIVE
                ? title.startsWith(prefix)
                : title.toLowerCase().startsWith(prefix.toLowerCase());

            const { title } = context.payload.pull_request;
            if (!REGEX.test(title)) {
              core.setFailed(
                `Pull Request title "${title}" failed to match regex - ${REGEX}`
              );
              return;
            }

            if (title.length < MIN_LENGTH) {
              core.setFailed(
                `Pull Request title "${title}" is smaller than the minimum length - ${MIN_LENGTH}`
              );
              return;
            }

            if (MAX_LENGTH > 0 && title.length > MAX_LENGTH) {
              core.setFailed(
                `Pull Request title "${title}" is greater than the maximum length - ${MAX_LENGTH}`
              );
              return;
            }

            core.info(`Allowed Prefixes: ${ALLOWED_PREFIXES}`);
            if (
              ALLOWED_PREFIXES.length &&
              !ALLOWED_PREFIXES.some((prefix) => validateTitlePrefix(title, prefix))
            ) {
              core.setFailed(
                `Pull Request title "${title}" did not start with any of the required prefixes - ${ALLOWED_PREFIXES}`
              );
              return;
            }
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: ${{ inputs.java-version }}
      - name: Cache Maven packages
        uses: actions/cache@v3.3.1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - uses: s4u/maven-settings-action@v2.8.0
        with:
          servers: |
            [{
            "id": "github",
            "username": "${{ secrets.maven-user }}",
            "password": "${{ secrets.maven-password }}"
            }]
      - name: Build with Maven
        run: mvn -B package
      - uses: anchore/sbom-action@v0
        with:
          path: ${{ inputs.sbom-path }}
      - name: Checkout Allure test scripts
        if: ${{ inputs.allure-enabled }}
        uses: actions/checkout@v3
        with:
          repository: felleslosninger/eid-github-actions
          token: ${{ secrets.eid-build-token }}
          path: scripts
      - name: Publish test report to allure server
        if: ${{ inputs.allure-enabled }}
        run: bash ./scripts/scripts/allure_test_results.sh
        env:
          PROJECT_REPO: ${{ github.event.repository.name }}
          ALLURE_USER: ${{ secrets.allure-user }}
          ALLURE_PASSWORD: ${{ secrets.allure-password }}
          MULTI_MODULE: "false"
